import ru.mpei.brics.extention.knowledgeBase.KnowledgeBaseFitnessDto;
import ru.mpei.brics.extention.knowledgeBase.KnowledgeBaseAllowDto;
import jade.core.Agent;

rule "Active power deficit fitness calculation"
    salience 1
    when
        $dto: KnowledgeBaseFitnessDto(currentFreq < 50)
    then
        $dto.setFitnessVal(10 * (1- $dto.getCurrentP() / $dto.getMaxP()) + 10);
end

rule "Active power excess fitness calculation"
    salience 1
    when
        $dto: KnowledgeBaseFitnessDto(currentFreq > 50)
    then
        $dto.setFitnessVal(10 * ($dto.getCurrentP() / $dto.getMaxP()) + 10);
end

rule "fitness function at a power limit and deficit"
    salience 2
    when
        $dto: KnowledgeBaseFitnessDto(currentP==maxP && currentFreq < 50)
    then
        $dto.setFitnessVal(0);
end

rule "fitness function at a power limit and excess"
    salience 2
    when
        $dto: KnowledgeBaseFitnessDto(currentP==minP && currentFreq > 50)
    then
        $dto.setFitnessVal(0);
end

rule "allow signal by power"
    salience 1
    when
        $dto: KnowledgeBaseAllowDto(currentP <= maxP && currentP >= minP)
    then
        $dto.setAllow(true);
end

rule "allow signal by frequency"
    salience 1
    when
        $dto: KnowledgeBaseAllowDto(currentFreq <= 52 && currentFreq >= 48)
    then
        $dto.setAllow(true);
end

rule "forbidding signal by frequency"
    salience 2
    when
        $dto: KnowledgeBaseAllowDto(currentFreq > 51.5 || currentFreq < 48.5)
    then
        $dto.setAllow(false);
end

